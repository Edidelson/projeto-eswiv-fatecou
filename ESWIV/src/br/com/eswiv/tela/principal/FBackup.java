/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FBackup.java
 *
 * Created on 23/05/2011, 16:17:20
 */
package br.com.eswiv.tela.principal;

import br.com.util.Util;
import com.zap.arca.LoggerEx;
import com.zap.arca.util.WindowUtils;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;


/**
 *
 * @author Everton
 */
public class FBackup extends javax.swing.JFrame {

    private File diretorio;
    private Util util = new Util();
    private Thread processo;
    private FileOutputStream out;
    private InputStreamReader in;
    
    
    /** Creates new form FBackup */
    public FBackup() {
        WindowUtils.setSystemLookAndFeel();
        util.inserirIconeAplicacao(this);
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    /**
     * Verifica se os campos obrigatórios foram preenchidos antes de executar a função principal do formulário
     * @return 
     */
    private boolean verificarCampos() {
        if(tfDiretorio.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Selecione um diretório");
            btSelecionarDiretorio.requestFocus();
            return false;
        }
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfDiretorio = new javax.swing.JTextField();
        btSelecionarDiretorio = new javax.swing.JButton();
        btIniciar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pbEstado = new javax.swing.JProgressBar();
        lbEstado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Orçamentos - Backup");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Backup"));

        jLabel1.setText("Diretório:");

        btSelecionarDiretorio.setText("Selecionar");
        btSelecionarDiretorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarDiretorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSelecionarDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelecionarDiretorio))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        btIniciar.setText("Iniciar");
        btIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIniciarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Processo"));

        lbEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbEstado.setText("Não iniciado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(pbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(pbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(lbEstado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btIniciar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSelecionarDiretorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarDiretorioActionPerformed
        JFileChooser jc = new JFileChooser();
        jc.setLocale(new Locale("pt", "BR"));
        jc.setDialogTitle("Selecionar diretório");
        jc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
//      jc.showOpenDialog(null);
        if(jc.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){     
             return;   
        }  
        tfDiretorio.setText(jc.getSelectedFile().getPath());
        diretorio = jc.getSelectedFile();
    }//GEN-LAST:event_btSelecionarDiretorioActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        if(processo != null) {
            processo.stop();
        }
        // Liberando recursos
        try {
            if(in != null) {
                in.close();
            }
            if(out != null) {
                out.close();
            }
        } catch (IOException ex) {
            LoggerEx.log(ex);
        }        
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIniciarActionPerformed
        if(verificarCampos()) {
            // Data para formação do nome do arquivo
            SimpleDateFormat df = new SimpleDateFormat("yyyyMMdd_HHMM");
            // Formando o nome do arquivo
            String nome = "backup_" + df.format(new java.util.Date()) + ".sql";
            File arquivo = new File(diretorio, nome);
            processo = new Thread(new Backup(arquivo));
            processo.start();
        }
    }//GEN-LAST:event_btIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FBackup().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btIniciar;
    private javax.swing.JButton btSelecionarDiretorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JProgressBar pbEstado;
    private javax.swing.JTextField tfDiretorio;
    // End of variables declaration//GEN-END:variables

    class Backup implements Runnable {

        private File arquivo;
        
        public Backup(File arquivo) {
            this.arquivo = arquivo;
        }
        
        public void run() {
            try {
                // Preparando a saída
                out = new FileOutputStream(arquivo);
                // Preparando o comando a ser executado
                String comando = "mysqldump --add-drop-database --databases clube -ubackup -pbackup";
                // Executando o comando e recebendo sua saída
                in = new InputStreamReader(Runtime.getRuntime().exec(comando).getInputStream(), "UTF-8");
                // Armazenando a saída em uma String
                StringBuilder buffer = new StringBuilder();
                // Alterando o estado               
                SwingUtilities.invokeLater(new Update(true));                
                for(;;) {
                    int c = in.read();
                    if(c == -1) {
                        break;
                    }
                    buffer.append((char) c);
                }                
                // Fechando o fluxo que recebeu a saída do comando
                in.close();
                // Gravando a String em um arquivo
                for(byte b: buffer.toString().getBytes("UTF8")) {
                    out.write(b);
                }
                // Liberando os recursos
                out.flush();
                out.close();
                // Alterando o estado                     
                SwingUtilities.invokeLater(new Update(false));                
                JOptionPane.showMessageDialog(null, "Arquivo gerado em: " + arquivo.getAbsolutePath());
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "O diretório selecionado é inválido");
                btSelecionarDiretorio.requestFocus();
            } catch (Exception ex) {
                Util.logException(ex);
                LoggerEx.log(ex);
            } 
        }
    }
    
    // Classe para atualizar os componentes da tela dentro de uma thread
    class Update implements Runnable {
        boolean estado;        
        Update(boolean estado) {
            this.estado = estado;
        }        
        public void run() {
            if(estado) {
                pbEstado.setIndeterminate(true);
                lbEstado.setText("Armazenando...");
                btIniciar.setEnabled(false);
            } else {
                pbEstado.setIndeterminate(false);
                lbEstado.setText("Concluído");
                btIniciar.setEnabled(true);
            }
        }        
    }
}


