/*
 * $Id: FAutenticar.java 486 2012-04-12 12:54:39Z Renato $
 *
 * Copyright (c) 1998-2012 Zap Informática, Inc. All Rights Reserved.
 *
 * This software is the confidential and proprietary information of
 * ZapInfo Informática, Inc. ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in accordance
 * with the terms of the license agreement you entered into with Zap Informática.
 */
package br.com.eswiv.tela.principal;

import br.com.eswiv.dao.DAOUsuario;
import br.com.eswiv.modelo.Usuario;
import br.com.eswiv.tela.generico.JAFrame;
import br.com.util.Administrador;
import br.com.util.Util;
import com.zap.arca.LoggerEx;
import com.zap.arca.auth.Criptografia;
import com.zap.arca.util.WindowUtils;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * @version 24 Novembro 2010
 * @since   SGT 1.0 
 * @author  Everton
 */
public class FAutenticar extends JAFrame {

    private FPrincipal frame;

    private static final Logger logger = Logger.getLogger("br.com.orca.tela");
    private Util util = new Util();
    private Criptografia crip;
    

    // Bloco de inicialização que aplica o ícone da aplicação
    {
        WindowUtils.setSystemLookAndFeel();
        util.inserirIconeAplicacao(this);
    }

    /** Creates new form FAutenticar */
    public FAutenticar(FPrincipal frame) {
        crip = new Criptografia();
        initComponents();
        this.frame = frame;
        this.setLocationRelativeTo(null);
    }

    /**
     * Verifica se o usuário pode acessar o sistema
     */
    public void autenticar() {
        try {
            Usuario usuario = obterUsuario();
            if(usuario != null) {
                DAOUsuario.setUsuarioAtual(usuario);
                dispose();
                logger.log(Level.INFO, "Usuário {0}, entrou no sistema", usuario.getNome());
            } else {
                JOptionPane.showMessageDialog(null, "Usuário ou senha inválidos");
                tfUsuario.requestFocus();
            }
        } catch(Exception ex) {  
            ex.printStackTrace();
            Util.logException(ex);
            LoggerEx.log(ex);
        }
    }

    /**
     * Obtem um usuário a partir dos dados informados no formulário
     * se os dados não forem válidos retorna NULL
     * @return 
     */
    private Usuario obterUsuario() {
        String nome = tfUsuario.getText();
        String senha = crip.criptografar(pfSenha.getPassword());
        
        if(nome.equals("CLUBE") || nome.equals("clube")) {
            return new Administrador().autenticar(nome, senha);
        } else {
            return new DAOUsuario().autenticar(nome, senha);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plAutenticacao = new javax.swing.JPanel();
        lbUsuario = new javax.swing.JLabel();
        lbSenha = new javax.swing.JLabel();
        tfUsuario = new com.zap.arca.JATextField(10, 1);
        pfSenha = new com.zap.arca.JAPasswordField();
        btEntrar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Orçamentos");

        plAutenticacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Autenticação"));

        lbUsuario.setText("Usuário:");

        lbSenha.setText("Senha:");

        tfUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUsuarioKeyTyped(evt);
            }
        });

        pfSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pfSenhaKeyTyped(evt);
            }
        });

        btEntrar.setText("Entrar");
        btEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout plAutenticacaoLayout = new javax.swing.GroupLayout(plAutenticacao);
        plAutenticacao.setLayout(plAutenticacaoLayout);
        plAutenticacaoLayout.setHorizontalGroup(
            plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAutenticacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plAutenticacaoLayout.createSequentialGroup()
                        .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbUsuario)
                            .addComponent(lbSenha))
                        .addGap(18, 18, 18)
                        .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)))
                    .addGroup(plAutenticacaoLayout.createSequentialGroup()
                        .addComponent(btEntrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCancelar)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        plAutenticacaoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btCancelar, btEntrar});

        plAutenticacaoLayout.setVerticalGroup(
            plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAutenticacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUsuario)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSenha)
                    .addComponent(pfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plAutenticacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEntrar)
                    .addComponent(btCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plAutenticacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plAutenticacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsuarioKeyTyped
        if(evt.getKeyChar() == (char) KeyEvent.VK_ENTER) {
            pfSenha.requestFocus();
        }
}//GEN-LAST:event_tfUsuarioKeyTyped

    private void pfSenhaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pfSenhaKeyTyped
        if(evt.getKeyChar() == (char) KeyEvent.VK_ENTER) {
            btEntrar.requestFocus();
            btEntrar.doClick();
        }
}//GEN-LAST:event_pfSenhaKeyTyped

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
}//GEN-LAST:event_btCancelarActionPerformed

    private void btEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarActionPerformed
        autenticar();
    }//GEN-LAST:event_btEntrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEntrar;
    private javax.swing.JLabel lbSenha;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JPasswordField pfSenha;
    private javax.swing.JPanel plAutenticacao;
    private com.zap.arca.JATextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
