/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FRelatorioGenerico.java
 *
 * Created on 25/03/2011, 14:51:05
 */

package br.com.eswiv.tela.relatorio;


import br.com.eswiv.dao.IDAOGenerico;
import br.com.eswiv.modelo.IModelo;
import br.com.util.Util;
import com.zap.arca.util.WindowUtils;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author Everton
 */
public class FRelatorioGenerico extends javax.swing.JFrame {

    protected Util util;

    // Bloco de inicialização para configurações da classe utilitária Util
    {
        util = new Util();
        WindowUtils.setSystemLookAndFeel();
        util.inserirIconeAplicacao(this);
    }

    /** Creates new form FRelatorioGenerico */
    public FRelatorioGenerico() {
        initComponents();
    }

    /**
     * Verifica se os componentes no array informado foram preenchidos
     * @param components - Component[]
     * @return - True se todos os componentes foram preenchidos, False caso contrário
     */
    public boolean verificarCampos(Component[] components) {
        boolean resultado = true;

        for(Component c: components) {
            // JTextField
            if(c instanceof JTextField) {
                if(((JTextField) c).getText().equals("")) {
                    c.requestFocus();
                    resultado =  false;
                    break;
                }
            }

            // JXDatePicker
            if(c instanceof JXDatePicker) {
                if(((JXDatePicker) c).getDate() == null) {
                    c.requestFocus();
                    resultado = false;
                    break;
                }
            }
        }

        if(!resultado) {
            JOptionPane.showMessageDialog(null, "Campo obrigatório não preenchido");
        }
        return resultado;
    }

    /**
     * Consulta um objeto que implemente IModelo do banco de dados a partir do DAO informado
     * @param text - JTextField - contendo o código do objeto
     * @param dao - DAO referente ao objeto
     * @param label - JLabel para escrever a descrição do objeto
     * @return IModelo - resultado da consulta, NULL se não houver resultado
     */
    public IModelo getModeloPorCodigo(JTextField text, IDAOGenerico dao, JLabel label) {
        IModelo modelo = null;
        if(!text.getText().equals("")) {
            try {
                modelo = dao.consultar(Integer.parseInt(text.getText()), false);
            } catch(RuntimeException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Falha ao realizar consulta");
                return null;
            }
            if(modelo == null) {
                JOptionPane.showMessageDialog(null, "Registro não encontrado");
                label.setText("");
                text.setText("");
                text.requestFocus();
            } else {
                label.setText(modelo.toString());
            }
        } else {
            label.setText("");
        }
        return modelo;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRelatorioGenerico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
