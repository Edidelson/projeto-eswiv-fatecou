package br.com.eswiv.tela.relatorio;

import br.com.eswiv.auxiliares.DSelecionarObjeto;
import br.com.eswiv.dao.DAOBem;
import br.com.eswiv.dao.DAOCalculo;
import br.com.eswiv.dao.DAOProprietario;
import br.com.eswiv.modelo.Bem;
import br.com.eswiv.modelo.Calculo;
import br.com.eswiv.modelo.Despesas;
import br.com.eswiv.modelo.Proprietario;
import br.com.eswiv.tela.cadastro.FBem;
import br.com.eswiv.tela.cadastro.FProprietario;
import br.com.eswiv.tela.tablemodel.BemTableModel;
import br.com.eswiv.tela.tablemodel.ProprietarioTableModel;
import br.com.util.Util;
import com.zap.arca.JASelectPicker;
import com.zap.arca.util.WindowUtils;
import java.awt.Component;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 * @author Edidelson
 */
public class FRelatorio extends Filtro {

    private String mensagem1 = "O valor das despesas é maior que o valor das depreciações, o sistema aconselha a troca do bem.";
    private String mensagem2 = "O valor das despesas é menor que o valor das depreciações, o bem está em boas condições.";
    private Double valor = 0.00;
    private Double valorDepreciacao = 0.00;
    Util util = new Util();

    public FRelatorio() {
        WindowUtils.setSystemLookAndFeel();
        initComponents();
        WindowUtils.exitEsc(this);
        WindowUtils.nextEnter(this);
        util.setEnterButton(btImprimir);
        setLocationRelativeTo(null);
        // campos obrigatórios
        componentes = new HashMap();
        componentes.put("Proprietario", new Component[]{jsProprietario});
        componentes.put("Bem", new Component[]{jsBem});
        componentes.put("Periodo", new Component[]{dtFinal, dtInicial});

        obrigatorios = new HashMap();
        obrigatorios.put("Bem", jsBem);
    }

    private boolean verificarCampos() {
        if ((dtInicial.getDate() != null) && (dtFinal.getDate() != null)) {
            if (dtInicial.getDate().after(dtFinal.getDate())) {
                JOptionPane.showMessageDialog(null, "A data inicial não pode ser maior que a data final");
                dtInicial.requestFocus();
                return false;
            }
        }
        // Verificando os campos obrigatórios
        if (camposObrigatorios != null) {
            for (Component c : camposObrigatorios) {
                // Verificando se é um campo de texto e se foi preenchido
                if (c instanceof JASelectPicker) {
                    if (((JASelectPicker) c).getEditor().getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Campo obrigatório não preenchido");
                        c.requestFocus();
                        return false;
                    }
                }
            }
        }
        return true;
    }

    public String avaliacao(Integer codigo) {
        Bem bem = new DAOBem().consultar(codigo);
        valorDepreciacao = new DAOCalculo().getMaxValue(bem);

        if (bem != null && bem.getDespesas().size() > 0) {
            for (Despesas despesas : bem.getDespesas()) {
                valor += despesas.getValor();
            }
        }
        if (valorDepreciacao != null && valor > valorDepreciacao) {
            return mensagem1;
        } else {
            return mensagem2;
        }
    }

    /**
     * Configura os parâmetros para geração do relatório, obtem os objetos
     * necessários e gera o relatório
     */
    public void imprimir() {
        if (verificarCampos()) {
            Date dataInicial = null;
            Date dataFinal = null;
            if (dtInicial.getDate() != null) {
                dataInicial = new Date(dtInicial.getDate().getTime());
            }
            if (dtFinal.getDate() != null) {
                dataFinal = new Date(dtFinal.getDate().getTime());
            }
            Map<String, Object> parametros = new HashMap<>();
            parametros.put("PROPRIETARIO", jsProprietario.getValue());
            parametros.put("BEM", jsBem.getValue());
            parametros.put("DATA_INICIAL", dataInicial);
            parametros.put("DATA_FINAL", dataFinal);
            if (jsBem.getValue() != null) {
                String avaliacao = avaliacao(Integer.parseInt(jsBem.getValue().getCodigo() + ""));
                parametros.put("AVALIACAO", avaliacao);
            }
            new DCarregandoRelatorio(this, true).gerarRelatorio(relatorio.getCaminho(), parametros);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTela = new javax.swing.JPanel();
        plCampos = new javax.swing.JPanel();
        plFilial = new javax.swing.JPanel();
        lbFilial = new javax.swing.JLabel();
        jsBem = new com.zap.arca.JASelectPicker<Bem>();
        lbBemSelecionado = new javax.swing.JLabel();
        jsProprietario = new com.zap.arca.JASelectPicker<Proprietario>();
        lbProprietarioSelecionado = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        plPeriodo = new javax.swing.JPanel();
        lbDataInicial = new javax.swing.JLabel();
        dtInicial = new com.zap.arca.JADatePicker();
        lbDataFinal = new javax.swing.JLabel();
        dtFinal = new com.zap.arca.JADatePicker();
        btImprimir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Filtro Relatório");

        plCampos.setBackground(new java.awt.Color(255, 255, 255));
        plCampos.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        plFilial.setBackground(new java.awt.Color(255, 255, 255));
        plFilial.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        lbFilial.setText("Bem:");

        jsBem.setEnabled(false);
        jsBem.setLabel(lbBemSelecionado);
        jsBem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsBemActionPerformed(evt);
            }
        });
        jsBem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jsBemFocusLost(evt);
            }
        });

        jsProprietario.setEnabled(false);
        jsProprietario.setLabel(lbProprietarioSelecionado);
        jsProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsProprietarioActionPerformed(evt);
            }
        });
        jsProprietario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jsProprietarioFocusLost(evt);
            }
        });

        jLabel3.setText("Proprietário:");

        javax.swing.GroupLayout plFilialLayout = new javax.swing.GroupLayout(plFilial);
        plFilial.setLayout(plFilialLayout);
        plFilialLayout.setHorizontalGroup(
            plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plFilialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lbFilial))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plFilialLayout.createSequentialGroup()
                        .addComponent(jsProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbProprietarioSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plFilialLayout.createSequentialGroup()
                        .addComponent(jsBem, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbBemSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        plFilialLayout.setVerticalGroup(
            plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plFilialLayout.createSequentialGroup()
                .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbFilial)
                        .addComponent(jsBem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbBemSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbProprietarioSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plFilialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jsProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        plPeriodo.setBackground(new java.awt.Color(255, 255, 255));
        plPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder("Período"));

        lbDataInicial.setText("Data Inicial:");

        dtInicial.setEnabled(false);
        dtInicial.setNextFocusableComponent(dtFinal);

        lbDataFinal.setText("Data Final:");

        dtFinal.setEnabled(false);

        javax.swing.GroupLayout plPeriodoLayout = new javax.swing.GroupLayout(plPeriodo);
        plPeriodo.setLayout(plPeriodoLayout);
        plPeriodoLayout.setHorizontalGroup(
            plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDataInicial)
                    .addComponent(lbDataFinal))
                .addGap(18, 18, 18)
                .addGroup(plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        plPeriodoLayout.setVerticalGroup(
            plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plPeriodoLayout.createSequentialGroup()
                .addGroup(plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDataInicial)
                    .addComponent(dtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDataFinal)
                    .addComponent(dtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout plCamposLayout = new javax.swing.GroupLayout(plCampos);
        plCampos.setLayout(plCamposLayout);
        plCamposLayout.setHorizontalGroup(
            plCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plFilial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(plPeriodo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        plCamposLayout.setVerticalGroup(
            plCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plCamposLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(plPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        btImprimir.setText("Imprimir");
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnTelaLayout = new javax.swing.GroupLayout(pnTela);
        pnTela.setLayout(pnTelaLayout);
        pnTelaLayout.setHorizontalGroup(
            pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTelaLayout.createSequentialGroup()
                .addGroup(pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnTelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(plCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnTelaLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btImprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCancelar)))
                .addContainerGap())
        );
        pnTelaLayout.setVerticalGroup(
            pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btImprimir)
                    .addComponent(btCancelar))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed
        imprimir();
    }//GEN-LAST:event_btImprimirActionPerformed

    private void jsBemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsBemActionPerformed
        if (JASelectPicker.SELECT_KEY.equals(evt.getActionCommand())) {
            jsBem.requestFocus();
            new DSelecionarObjeto(this, true, jsBem)
                    .title("Selecionar Bem...")
                    .dao(DAOBem.class)
                    .model(new BemTableModel())
                    .frame(FBem.class).open();
        }
    }//GEN-LAST:event_jsBemActionPerformed

    private void jsBemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsBemFocusLost
        if (jsBem.getText().equals("")) {
            lbBemSelecionado.setText("");
            jsBem.setValue(null, "");
            return;
        }
        DAOBem dao = new DAOBem();
        String value = jsBem.getEditor().getText();
        Bem bem = null;
        if (value.length() > 0) {
            bem = dao.consultar(Integer.valueOf(value), false);
        }
        jsBem.setValue(bem, bem != null ? bem.getCodigo() : "");
    }//GEN-LAST:event_jsBemFocusLost

    private void jsProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsProprietarioActionPerformed
        if (JASelectPicker.SELECT_KEY.equals(evt.getActionCommand())) {
            jsProprietario.requestFocus();
            new DSelecionarObjeto(this, true, jsProprietario)
                    .title("Selecionar Proprietário...")
                    .dao(DAOProprietario.class)
                    .model(new ProprietarioTableModel())
                    .frame(FProprietario.class).open();
        }
    }//GEN-LAST:event_jsProprietarioActionPerformed

    private void jsProprietarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsProprietarioFocusLost
        if (jsProprietario.getText().equals("")) {
            lbProprietarioSelecionado.setText("");
            jsProprietario.setValue(null, "");
            return;
        }
        DAOProprietario dao = new DAOProprietario();
        String value = jsProprietario.getEditor().getText();
        Proprietario proprietario = null;
        if (value.length() > 0) {
            proprietario = dao.consultar(Integer.valueOf(value), false);
        }
        jsProprietario.setValue(proprietario, proprietario != null ? proprietario.getCodigo() : "");
    }//GEN-LAST:event_jsProprietarioFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRelatorio().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btImprimir;
    private com.zap.arca.JADatePicker dtFinal;
    private com.zap.arca.JADatePicker dtInicial;
    private javax.swing.JLabel jLabel3;
    private com.zap.arca.JASelectPicker<Bem> jsBem;
    private com.zap.arca.JASelectPicker<Proprietario> jsProprietario;
    private javax.swing.JLabel lbBemSelecionado;
    private javax.swing.JLabel lbDataFinal;
    private javax.swing.JLabel lbDataInicial;
    private javax.swing.JLabel lbFilial;
    private javax.swing.JLabel lbProprietarioSelecionado;
    private javax.swing.JPanel plCampos;
    private javax.swing.JPanel plFilial;
    private javax.swing.JPanel plPeriodo;
    private javax.swing.JPanel pnTela;
    // End of variables declaration//GEN-END:variables
}